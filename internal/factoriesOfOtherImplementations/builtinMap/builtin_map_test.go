// This file had been automatically generated by utility "github.com/xaionaro-go/atomicmap/internal/benchmarkCodeGen"

package builtinMap

import (
	"testing"

	benchmark "github.com/xaionaro-go/atomicmap/internal/benchmarkRoutines"
)

func Benchmark_builtinMap_Set_intKeyType_blockSize0_keyAmount16_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfSet(b, NewWithArgs, 0, 16, "int")
}

func Benchmark_builtinMap_Set_stringKeyType_blockSize0_keyAmount16_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfSet(b, NewWithArgs, 0, 16, "string")
}

func Benchmark_builtinMap_Set_intKeyType_blockSize0_keyAmount512_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfSet(b, NewWithArgs, 0, 512, "int")
}

func Benchmark_builtinMap_Set_stringKeyType_blockSize0_keyAmount512_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfSet(b, NewWithArgs, 0, 512, "string")
}

func Benchmark_builtinMap_Set_intKeyType_blockSize0_keyAmount65536_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfSet(b, NewWithArgs, 0, 65536, "int")
}

func Benchmark_builtinMap_Set_stringKeyType_blockSize0_keyAmount65536_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfSet(b, NewWithArgs, 0, 65536, "string")
}

func Benchmark_builtinMap_Set_intKeyType_blockSize0_keyAmount1048576_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfSet(b, NewWithArgs, 0, 1048576, "int")
}

func Benchmark_builtinMap_Set_stringKeyType_blockSize0_keyAmount1048576_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfSet(b, NewWithArgs, 0, 1048576, "string")
}

func Benchmark_builtinMap_Get_intKeyType_blockSize0_keyAmount16_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfGet(b, NewWithArgs, 0, 16, "int")
}

func Benchmark_builtinMap_Get_stringKeyType_blockSize0_keyAmount16_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfGet(b, NewWithArgs, 0, 16, "string")
}

func Benchmark_builtinMap_Get_intKeyType_blockSize0_keyAmount512_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfGet(b, NewWithArgs, 0, 512, "int")
}

func Benchmark_builtinMap_Get_stringKeyType_blockSize0_keyAmount512_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfGet(b, NewWithArgs, 0, 512, "string")
}

func Benchmark_builtinMap_Get_intKeyType_blockSize0_keyAmount65536_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfGet(b, NewWithArgs, 0, 65536, "int")
}

func Benchmark_builtinMap_Get_stringKeyType_blockSize0_keyAmount65536_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfGet(b, NewWithArgs, 0, 65536, "string")
}

func Benchmark_builtinMap_Get_intKeyType_blockSize0_keyAmount1048576_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfGet(b, NewWithArgs, 0, 1048576, "int")
}

func Benchmark_builtinMap_Get_stringKeyType_blockSize0_keyAmount1048576_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfGet(b, NewWithArgs, 0, 1048576, "string")
}

func Benchmark_builtinMap_Unset_intKeyType_blockSize0_keyAmount16_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfUnset(b, NewWithArgs, 0, 16, "int")
}

func Benchmark_builtinMap_Unset_stringKeyType_blockSize0_keyAmount16_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfUnset(b, NewWithArgs, 0, 16, "string")
}

func Benchmark_builtinMap_Unset_intKeyType_blockSize0_keyAmount512_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfUnset(b, NewWithArgs, 0, 512, "int")
}

func Benchmark_builtinMap_Unset_stringKeyType_blockSize0_keyAmount512_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfUnset(b, NewWithArgs, 0, 512, "string")
}

func Benchmark_builtinMap_Unset_intKeyType_blockSize0_keyAmount65536_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfUnset(b, NewWithArgs, 0, 65536, "int")
}

func Benchmark_builtinMap_Unset_stringKeyType_blockSize0_keyAmount65536_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfUnset(b, NewWithArgs, 0, 65536, "string")
}

func Benchmark_builtinMap_Unset_intKeyType_blockSize0_keyAmount1048576_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfUnset(b, NewWithArgs, 0, 1048576, "int")
}

func Benchmark_builtinMap_Unset_stringKeyType_blockSize0_keyAmount1048576_falseThreadSafety(b *testing.B) {
	benchmark.DoBenchmarkOfUnset(b, NewWithArgs, 0, 1048576, "string")
}
